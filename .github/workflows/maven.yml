# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Install SSH key
#        uses: webfactory/ssh-agent@v0.5.3
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#      - name: Copy files via SSH
#        run: scp -o StrictHostKeyChecking=no target/my-app-1.0.jar user@your-server-ip:/path/to/deploy/
#      - name: Restart Application
#        run: ssh user@your-server-ip 'bash -s' < ./scripts/restart-app.sh

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
